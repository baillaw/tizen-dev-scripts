#!/bin/bash

LOCAL=https://obs.vannes:444
REMOTE=https://api.tizen.org
#PROJECTS="remote/Tizen:Common remote/Tizen:IVI remote/Tizen:Mobile Tizen:Common Tizen:Common:devel"
#PROJECTS="remote/Tizen:Common remote/Tizen:IVI remote/Tizen:Mobile"
PROJECTS="remote/Tizen:Common remote/Tizen:3.0.2014.Q3:Common remote/Tizen:IVI remote/Tizen:3.0.M14.3:IVI"

function usage() {
	echo "Usage: $0 <package name> [<package name> ...]"
	exit 1
}

function color {
	for k in $*; do
		case $k in
			bold) tput bold 2>/dev/null;;
			none) tput sgr0 2>/dev/null;;
			*) tput setaf $k 2>/dev/null;;
		esac
	done
}

RED=$(color bold 1)
GREEN=$(color bold 2)
YELLOW=$(color bold 3)
COLOR_NONE=$(color none)

function get_pkg_infos() {
	local srv=$1
	local project=$2
	local pkgname=$3

	local tmpfile=$(mktemp)
	trap "rm -f $tmpfile" STOP INT QUIT EXIT
	
	osc -A $srv list $project $pkgname >$tmpfile 2>/dev/null
	[[ $? -ne 0 ]] && return 1
	
	if grep _service $tmpfile &>/dev/null; then
		# parse service
		osc -A $srv cat $project $pkgname _service >$tmpfile
		local xml=$(which xml || which xmlstarlet)
		repo=$($xml sel -t -v "/services/service/param[@name='url']/text()" <$tmpfile | cut -f4- -d'/')
		rev=$($xml sel -t -v "/services/service/param[@name='revision']/text()" <$tmpfile)

		echo service $repo $rev
	else
		# find spec file name
		osc -A $srv cat $project $pkgname $(egrep "\.spec$" $tmpfile) >$tmpfile
		repo=$(grep VCS: $tmpfile | awk '{print $2;}' | cut -f1 -d'#')
		rev=$(grep VCS: $tmpfile | awk '{print $2;}' | cut -f2 -d'#')
		license=$(grep License: $tmpfile | sed 's/License:[ \t]*//g' | awk '{printf("%s;",$0);}')
		echo VCS $repo $rev $license
	fi

	return 0
}

noremote=0
for pkg in $@; do
	[[ $pkg == "-l" ]] && { noremote=1; continue; }
	[[ $pkg == "-r" ]] && { noremote=0; continue; }

	echo $pkg: 

	for proj in $PROJECTS; do
		if [[ "$(dirname $proj)" == "remote" ]]; then
			[[ $noremote -eq 1 ]] && continue;
			srv=$REMOTE
			location="remote"
		else
			srv=$LOCAL
			location="local"
		fi
		proj=$(basename $proj)

		echo -n "   ..."
		content=$(get_pkg_infos $srv $proj $pkg)
		rc=$?
		echo -en "\b\b\b"

		if [[ $rc -eq 0 ]]; then
			echo ${GREEN}$location/$proj${COLOR_NONE} $content
		else
			echo ${RED}$location/$proj${COLOR_NONE}
		fi
	done
done
