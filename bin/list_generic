#!/bin/bash 

#OBS=https://obs.vannes:444
OBS=https://api.tizen.org
PROJECT=Tizen:Generic

PARALLEL_JOBS=16

function parallel_jobs {
	local max_number=$((0 + ${1:-0}))
	while true; do
		jobs &>/dev/null
		if [[ $(jobs -p | wc -l) -lt $max_number ]]; then
			break
		fi
		sleep 0.3
	done
}

function get_pkg_infos() {
	local srv=$1
	local project=$2
	local pkgname=$3

	local tmpfile=$(mktemp)
	trap "rm -f $tmpfile" STOP INT QUIT EXIT
	
	osc -A $srv list $project $pkgname >$tmpfile #2>/dev/null
	[[ $? -ne 0 ]] && return 1
	
	if egrep ^_service $tmpfile &>/dev/null; then
		# parse service
		osc -A $srv cat $project $pkgname _service >$tmpfile
		local xml=$(which xml || which xmlstarlet)
		repo=$($xml sel -t -v "/services/service/param[@name='url']/text()" <$tmpfile | cut -f4- -d'/')
		rev=$($xml sel -t -v "/services/service/param[@name='revision']/text()" <$tmpfile)

		echo service $repo $rev
	else
		# find spec file name
		osc -A $srv cat $project $pkgname $(egrep "\.spec$" $tmpfile | head -1) >$tmpfile
		repo=$(grep VCS: $tmpfile | awk '{print $2;}' | cut -f1 -d'#')
		rev=$(grep VCS: $tmpfile | awk '{print $2;}' | cut -f2 -d'#')

		echo VCS $repo $rev 
	fi

	return 0
}

function show_pkg_infos() {
	try=1

	while [[ $try -le 3 ]]; do

		content=$(get_pkg_infos $@)
		rc=$?

		if [[ $rc -eq 0 ]]; then
			echo $pkg $content
			return 0
		fi

		echo $3 try $try FAIL >&2
		try=$(( try + 1 ))
		sleep 0.5
	done
	
	echo $pkg "<unknown>"
}


pkglist=$(osc -A $OBS list $PROJECT)
echo "$(echo $pkglist | wc -w) packages to check" >&2

for pkg in $pkglist; do
	parallel_jobs $PARALLEL_JOBS
	show_pkg_infos $OBS $PROJECT $pkg &
done
parallel_jobs 1

