#!/bin/bash

API=
PROJECT=Tizen:Common

PARALLEL_JOBS=8

TEMP=$(getopt -o a:p: --long api:,project: -n $(basename $0) -- "$@")
[[ $? != 0 ]] && { echo "Terminating..." >&2; exit 1; }
eval set -- "$TEMP"

while true; do
	case "$1" in 
		-a|--api) API=$2; shift 2;;
		-p|--project) PROJECT=$2; shift 2;;
		--) shift; break;;
		*) echo "Usage: $0 [-a|--api url][-p|--project name]"; exit 1;;
	esac
done

OSCOPTS=
[[ -n "$API" ]] && OSCOPTS="-A $API"

function parallel_jobs {
	local max_number=$((0 + ${1:-0}))
	while true; do
		jobs &>/dev/null
		if [[ $(jobs -p | wc -l) -lt $max_number ]]; then
			break
		fi
		sleep 0.3
	done
}

function osc() {
	OSC=$(which osc)
	[[ $? -ne 0 ]] && { echo "Unable to find osc..." >&2; exit 1; }

	echo $OSC $OSCOPTS "$@" >&2
	$OSC $OSCOPTS "$@"
}

function pkgtype() {
	for file in $(osc ls $PROJECT $1); do
		case $file in
			_service) echo "regular"; return 0;;
			_link) echo "link"; return 0;;
			_aggregate) echo "aggregate"; return 0;;
		esac
	done
	echo "unknown"
	return 1
}

function pkginfos() {
	pkgname=$1

	local tmpfile=$(mktemp)
	trap "rm -f $tmpfile" STOP INT QUIT EXIT
	
	osc list -e $PROJECT $pkgname >$tmpfile 2>/dev/null
	[[ $? -ne 0 ]] && return 1

	# find spec file name
	osc cat $PROJECT $pkgname $(egrep "\.spec$" $tmpfile | sort | head -1) >$tmpfile 2>/dev/null
	repo=$(grep VCS: $tmpfile | awk '{print $2;}' | cut -f1 -d'#')
	rev=$(grep VCS: $tmpfile | awk '{print $2;}' | cut -f2 -d'#')

	# parse service file
	echo "   <project name=\"$pkgname\" path=\"$repo\" revision=\"$rev\">"
}

function pkgjob() {
	pkg=$1
	pkgtype=$(pkgtype $pkg)
	[[ "$pkgtype" == "regular" ]] && pkginfos $pkg
}

echo "<manifest>"
echo "   <remote fetch=\"ssh://review.tizen.org\" name=\"tizen-gerrit\" review=\"https://review.tizen.org/gerrit\"/>"
echo "   <default remote=\"tizen-gerrit\"/>"
echo ""

for pkg in $(osc ls $PROJECT); do
	parallel_jobs $PARALLEL_JOBS
	pkgjob $pkg &
done
parallel_jobs 1

echo "</manifest>"

